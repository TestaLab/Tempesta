General notes:
150216

setImage function in liveview functions seems to start some seperate thread process. viewtimer waits for this process to finish before calling timeout again. Clue to this was
was that the line setImage did not take any time but time until next update call was long.

If image or recording appers to have been reshaped wrongly when opening with for example ImageJ, it can ususlly be (at least temporarily) solved by changing the "order" parameter
in the reshape function between 'F' (Fortran style) or 'C' (C style). I think it changes wheter new structure is filled row by row or column by column.

Note on Hamamatsu control:
When changing parameters vpos hpos vsize and hsize and camera is in subarray = 'ON' mode, an "Invalid subarray" error will be thrown if a new value on the parameter causes 
subarray do define an area outside the chip. If camera is in subarray = 'OFF' mode, the parameters can be changed arbisrarily within their respective ranges, but if subarray mode
is then changed from 'OFF' to on, and error will be thrown if subarray values define an area outside the chip.


Issues...

hamamatsu_coltrol.py cannot be imported as module if Orcaflash is not connected since camera is tried to be initialized when importing the module. 
Raises DCAMException. This exception cannot be caught outside this module since the exceptionclass cannot be initialized if the module cannot be 
initialized... DCAMException is not caught anywhere in hamamatsu_control -> unnecessary? "Try : import" is used now but requires a default Except:
which is not really good to have.  

Bugs or TODOs:

170216
Even though parameters like Y0 and X0 show zero they can still apparently take negative values with can give error when trying to pass to camera.

190216
Try to rearrange so that the liveview updating occurs in seperate thread so as to not "freeze" the gui at low frame rates -> big fov. See how done in 
Recording Widget when Recworker is moved to new thread. Maybe create Liveviewer class that does the update and move to own thread before starting.